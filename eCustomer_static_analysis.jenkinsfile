@Library('sharedLibs')
import com.conduent.notifications.SparseNotify

notify('joseph.dowling@conduent.com, Mani.Viswanathan@conduent.com, USA.PDSI.FLCCSS.JAVA@conduent.com') {

def artifactoryURL = "http://138.69.14.78:8085/artifactory/"
def eCustomerArtifactoryURL = "FLCSS_CI/master/eCustomer/${EAR_TAG}/"
def repo = "${SNAPSHOT}/eCustomer_Integration/eCustomer_Java"

 node('FLCSS_eCustomer_Static_Analysis') {
     stage('Checkout for App Scan') {
         initialCheckout("${repo}@HEAD", 'UpdateWithCleanUpdater')
         def co = load 'checkout.groovy'
         co.checkout(repo)
         dir('appscan') {
             initialCheckout('http://10.70.20.53/svn/DevOps/trunk/AppScanRunner', 'UpdateUpdater')
         }

         withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'app-scan-source',
                             usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {

             bat "appscan/SecurityScan-AppScanSource.cmd /source:. /id:FLCSS_eCustomer /u:${USERNAME} /p:${PASSWORD} /lang:java"
         }
         stage('Publish for App Scan') {
             def server = Artifactory.newServer url: "${artifactoryURL}", credentialsId: 'fb03a5c5-329b-4d49-bfb6-5e2f515c7b40'
             uploadToArtifactory(server, [pattern: "FLCSS_eCustomer*REPORT.pdf", target: "${eCustomerArtifactoryURL}AppScan_FLCSS_eCustomer-${EAR_TAG}.pdf"])
         }
     }
 }
}


